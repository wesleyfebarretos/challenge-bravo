{
    "swagger": "2.0",
    "info": {
        "description": "Currency conversion API.",
        "title": "Challenge Bravo",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Wesley Ferreira",
            "url": "https://www.linkedin.com/in/wesleyfebarretos/"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/auth": {
            "post": {
                "description": "authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign In",
                "parameters": [
                    {
                        "description": "sign in data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/currency": {
            "get": {
                "description": "find all currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Find All Curriencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.FindAllCurrencyResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create a currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Create Currency",
                "parameters": [
                    {
                        "description": "new currency",
                        "name": "currency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCurrencyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/exception.UnauthorizedException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/currency/code/{code}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "find currency by code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Find Currency By Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "currency code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FindCurrencyByCodeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/exception.UnauthorizedException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/currency/convert": {
            "get": {
                "description": "convert the value of one currency to another",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Currency Conversion",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10.2,
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "usd",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "brl",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CurrencyConversionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/currency/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "find currency by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Find Currency By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "currency id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FindCurrencyByIdResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/exception.UnauthorizedException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update currency informing the id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Update Currency",
                "parameters": [
                    {
                        "description": "new currency data",
                        "name": "newCurrency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/exception.UnauthorizedException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete a currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete Currency",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "currency id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/exception.UnauthorizedException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "create an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "new user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update user informing the id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "new user data",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/exception.UnauthorizedException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enum.Role": {
            "type": "string",
            "enum": [
                "user",
                "admin"
            ],
            "x-enum-varnames": [
                "USER",
                "ADMIN"
            ]
        },
        "exception.BadRequestException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "bad request"
                }
            }
        },
        "exception.InternalServerException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "exception.UnauthorizedException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "access not authorized"
                }
            }
        },
        "handler.CreateCurrencyRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "response_path_to_rate": {
                    "type": "string",
                    "example": "bpi;USD;rate_float"
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.CreateCurrencyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "response_path_to_rate": {
                    "type": "string",
                    "example": "bpi;USD;rate_float"
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.CreateUserRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "12$a@3$@00!"
                }
            }
        },
        "handler.CreateUserResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-08-31T14:21:38-03:00"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "AasEsF!@#$%!2"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.Role"
                        }
                    ],
                    "example": "user"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-08-31T14:21:38-03:00"
                }
            }
        },
        "handler.CurrencyConversionResponse": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "example": "5.57 BRL"
                },
                "value": {
                    "type": "number",
                    "example": 5.57
                }
            }
        },
        "handler.FindAllCurrencyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.FindCurrencyByCodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.FindCurrencyByIdResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.SignInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "12$a@3$@00!"
                }
            }
        },
        "handler.SignInResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImpvaG5kb2VAZ21haWwuY29tIiwiZXhwIjoxNzI3NDkzMTg4LCJpZCI6NSwicm9sZSI6InVzZXIifQ.jpvz7KPxB7dOMSREn1tc8nfJyYgSWVq3GuF71fnBsos"
                },
                "user": {
                    "$ref": "#/definitions/handler.SignInUserResponse"
                }
            }
        },
        "handler.SignInUserResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-26T02:50:34.749998Z"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 2
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.Role"
                        }
                    ],
                    "example": "user"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-26T02:50:34.749998Z"
                }
            }
        },
        "handler.UpdateCurrencyRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "12$a@3$@00!"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}