// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Wesley Ferreira",
            "url": "https://www.linkedin.com/in/wesleyfebarretos/"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/currency": {
            "get": {
                "description": "find all currencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Find All Curriencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FindAllCurrencyResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            },
            "post": {
                "description": "create a currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Create Currency",
                "parameters": [
                    {
                        "description": "new currency",
                        "name": "currency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateCurrencyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/currency/convert": {
            "get": {
                "description": "convert the value of one currency to another",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Currency Conversion",
                "parameters": [
                    {
                        "type": "number",
                        "example": 10.2,
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "usd",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "brl",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CurrencyConversionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/currency/{id}": {
            "delete": {
                "description": "delete a currency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete Currency",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "currency id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "create an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "new user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/exception.BadRequestException"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/exception.InternalServerException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enum.Role": {
            "type": "string",
            "enum": [
                "user",
                "admin"
            ],
            "x-enum-varnames": [
                "USER",
                "ADMIN"
            ]
        },
        "exception.BadRequestException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "bad request"
                }
            }
        },
        "exception.InternalServerException": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "handler.CreateCurrencyRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "response_path_to_rate": {
                    "type": "string",
                    "example": "bpi;USD;rate_float"
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.CreateCurrencyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "response_path_to_rate": {
                    "type": "string",
                    "example": "bpi;USD;rate_float"
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        },
        "handler.CreateUserRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "12$a@3$@00!"
                }
            }
        },
        "handler.CreateUserResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-08-31T14:21:38-03:00"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "AasEsF!@#$%!2"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.Role"
                        }
                    ],
                    "example": "user"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-08-31T14:21:38-03:00"
                }
            }
        },
        "handler.CurrencyConversionResponse": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string",
                    "example": "5.57 BRL"
                },
                "value": {
                    "type": "number",
                    "example": 5.57
                }
            }
        },
        "handler.FindAllCurrencyResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "USD"
                },
                "country": {
                    "type": "string",
                    "example": "United States"
                },
                "country_code": {
                    "type": "string",
                    "example": "USA"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1
                },
                "fic": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Dollar"
                },
                "number": {
                    "type": "integer",
                    "example": 840
                },
                "search_url": {
                    "type": "string",
                    "example": "http://usd-exchange.com"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-09-05 02:28:41.425 -0300"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1
                },
                "usd_exchange_rate": {
                    "type": "number",
                    "example": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Challenge Bravo",
	Description:      "Currency conversion API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
